/*
 * This file is generated by jOOQ.
 */
package com.kotlinspring.infrastructure.db.tables.records


import com.kotlinspring.infrastructure.db.tables._PrismaMigrations

import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.Id
import jakarta.persistence.Table

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Entity
@Table(
    name = "_prisma_migrations",
    schema = "public"
)
open class _PrismaMigrationsRecord() : UpdatableRecordImpl<_PrismaMigrationsRecord>(_PrismaMigrations._PRISMA_MIGRATIONS) {

    @get:Id
    @get:Column(name = "id", nullable = false, length = 36)
    open var id: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    @get:Column(name = "checksum", nullable = false, length = 64)
    open var checksum: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    @get:Column(name = "finished_at", precision = 6)
    open var finishedAt: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    @get:Column(name = "migration_name", nullable = false, length = 255)
    open var migrationName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    @get:Column(name = "logs")
    open var logs: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    @get:Column(name = "rolled_back_at", precision = 6)
    open var rolledBackAt: OffsetDateTime?
        set(value): Unit = set(5, value)
        get(): OffsetDateTime? = get(5) as OffsetDateTime?

    @get:Column(name = "started_at", precision = 6)
    open var startedAt: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    @get:Column(name = "applied_steps_count")
    open var appliedStepsCount: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised _PrismaMigrationsRecord
     */
    constructor(id: String? = null, checksum: String? = null, finishedAt: OffsetDateTime? = null, migrationName: String? = null, logs: String? = null, rolledBackAt: OffsetDateTime? = null, startedAt: OffsetDateTime? = null, appliedStepsCount: Int? = null): this() {
        this.id = id
        this.checksum = checksum
        this.finishedAt = finishedAt
        this.migrationName = migrationName
        this.logs = logs
        this.rolledBackAt = rolledBackAt
        this.startedAt = startedAt
        this.appliedStepsCount = appliedStepsCount
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised _PrismaMigrationsRecord
     */
    constructor(value: com.kotlinspring.infrastructure.db.tables.pojos._PrismaMigrations?): this() {
        if (value != null) {
            this.id = value.id
            this.checksum = value.checksum
            this.finishedAt = value.finishedAt
            this.migrationName = value.migrationName
            this.logs = value.logs
            this.rolledBackAt = value.rolledBackAt
            this.startedAt = value.startedAt
            this.appliedStepsCount = value.appliedStepsCount
            resetChangedOnNotNull()
        }
    }
}
