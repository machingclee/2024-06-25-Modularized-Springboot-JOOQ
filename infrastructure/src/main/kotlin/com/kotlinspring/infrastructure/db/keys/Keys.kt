/*
 * This file is generated by jOOQ.
 */
package com.kotlinspring.infrastructure.db.keys


import com.kotlinspring.infrastructure.db.tables.Course
import com.kotlinspring.infrastructure.db.tables.Teacher
import com.kotlinspring.infrastructure.db.tables.User
import com.kotlinspring.infrastructure.db.tables._PrismaMigrations
import com.kotlinspring.infrastructure.db.tables.records.CourseRecord
import com.kotlinspring.infrastructure.db.tables.records.TeacherRecord
import com.kotlinspring.infrastructure.db.tables.records.UserRecord
import com.kotlinspring.infrastructure.db.tables.records._PrismaMigrationsRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val _PRISMA_MIGRATIONS_PKEY: UniqueKey<_PrismaMigrationsRecord> = Internal.createUniqueKey(_PrismaMigrations._PRISMA_MIGRATIONS, DSL.name("_prisma_migrations_pkey"), arrayOf(_PrismaMigrations._PRISMA_MIGRATIONS.ID), true)
val COURSE_PKEY: UniqueKey<CourseRecord> = Internal.createUniqueKey(Course.COURSE, DSL.name("Course_pkey"), arrayOf(Course.COURSE.ID), true)
val TEACHER_PKEY: UniqueKey<TeacherRecord> = Internal.createUniqueKey(Teacher.TEACHER, DSL.name("Teacher_pkey"), arrayOf(Teacher.TEACHER.ID), true)
val USER_PKEY: UniqueKey<UserRecord> = Internal.createUniqueKey(User.USER, DSL.name("User_pkey"), arrayOf(User.USER.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val COURSE__COURSE_TEACHERID_FKEY: ForeignKey<CourseRecord, TeacherRecord> = Internal.createForeignKey(Course.COURSE, DSL.name("Course_teacherId_fkey"), arrayOf(Course.COURSE.TEACHERID), com.kotlinspring.infrastructure.db.keys.TEACHER_PKEY, arrayOf(Teacher.TEACHER.ID), true)
