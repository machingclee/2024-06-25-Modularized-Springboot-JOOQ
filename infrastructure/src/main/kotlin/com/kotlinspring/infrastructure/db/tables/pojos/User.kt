/*
 * This file is generated by jOOQ.
 */
package com.kotlinspring.infrastructure.db.tables.pojos


import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.Id
import jakarta.persistence.Table

import java.io.Serializable
import java.util.UUID


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Entity
@Table(
    name = "User",
    schema = "public"
)
data class User(
    @get:Id
    @get:Column(name = "id")
    var id: UUID? = null,
    @get:Column(name = "firstName", nullable = false, length = 30)
    var firstname: String,
    @get:Column(name = "lastname", nullable = false, length = 30)
    var lastname: String,
    @get:Column(name = "passwordHash", nullable = false)
    var passwordhash: String,
    @get:Column(name = "email", nullable = false)
    var email: String
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: User = other as User
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.firstname != o.firstname)
            return false
        if (this.lastname != o.lastname)
            return false
        if (this.passwordhash != o.passwordhash)
            return false
        if (this.email != o.email)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.firstname.hashCode()
        result = prime * result + this.lastname.hashCode()
        result = prime * result + this.passwordhash.hashCode()
        result = prime * result + this.email.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("User (")

        sb.append(id)
        sb.append(", ").append(firstname)
        sb.append(", ").append(lastname)
        sb.append(", ").append(passwordhash)
        sb.append(", ").append(email)

        sb.append(")")
        return sb.toString()
    }
}
